{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww21320\viewh15540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Generate PDF of Current Form View\
\
var pdfFileName = data.orderedForUsernname && data.nucoreOrderNumber ? data.orderedForUsernname + '-' + data.nucoreOrderNumber : 'document';\
var fileToken = \'91[token_id]\'92; // PDF token\
var currentForm = \'91[form_id]\'92;\
\
instance.label = 'Generating Preview'; // change button label\
instance.redraw();\
// change submission state to draft. \
submission.state = 'draft';\
 fetch(currentForm, \{\
    method: 'GET',\
    headers: \{\
      'Content-Type': 'application/json'\
    \}\
  \})\
  .then(function(data)\{\
    //reciving data via Fetch\
    return data.json();\
  \})\
  .then(function(res)\{\
  // Create pdf file link\
    var parentProjectId = res.project\
        var downloadUrl = 'https://files.form.io/pdf/' +\
    parentProjectId +\
    '/file/pdf/download?format=pdf';\
    \
  // Build the submission to preview\
  var requestJson = JSON.stringify(\{\
    form: res,\
    submission: \{data: data \}\
  \});\
  // Submit the form as draft\
  fetch(downloadUrl, \{\
    method: 'POST',\
    body: requestJson,\
    headers: \{\
      'Content-Type': 'application/json',\
      'x-file-token': fileToken\
    \}\
  \})\
    .then(function(response) \{\
        //creates a blob\
        instance.label = 'Downloading PDF'; // change button label\
        instance.redraw();\
      return response.blob();\
    \
    \})\
    .then(function(blob) \{\
      // Read the file\
    var reader = new FileReader();\
  \
      reader.onload = function() \{\
      // Create an Element to download pdf\
      var downloadLink = document.createElement('a');\
      downloadLink.href = reader.result;\
      downloadLink.download = pdfFileName + '.pdf';\
      downloadLink.click();\
        instance.label = instance.originalComponent.label;\
        instance.redraw();\
        instance.label = 'Saving'; // change button label\
        instance.redraw();\
        form.submit();\
      \};\
  \
      reader.readAsDataURL(blob);\
    \})\
    .catch(function(err) \{\
      alert('Error while generating PDF');\
      instance.label = instance.originalComponent.label;\
      instance.redraw();\
    \});\
  \
\});\
\
Generate In-Line Custom PDF within Current Form\
\
var pdfFileName = data.orderedForUsernname && data.nucoreOrderNumber ? data.orderedForUsernname + '-' + data.nucoreOrderNumber : 'document';\
var fileToken = \'91[token_id]\'92; // PDF token\
\
instance.label = 'Print Tag'; // change label\
instance.redraw();\
// Create instance using same pdf as nested form\
var pdf = new Formio(\'91[form_id]\'92);\
\
// change submission state to save it as draft\
submission.state = 'draft';\
pdf.loadForm().then(function(res)\{\
    // create pdf url download\
      var parentProjectId = res.project\
        var downloadUrl = 'https://files.form.io/pdf/' +\
    parentProjectId +\
    '/file/pdf/download?format=pdf';\
  var pdfSubmission = \{data: \{\}\};\
  res.components.forEach(function(component)\{\
    console.log(component.key, data[component.key]);\
    if(component.input && data[component.key]) \{\
      pdfSubmission.data[component.key] = data[component.key];\
    \}\
  \});\
  console.log(pdfSubmission);\
  var requestJson = JSON.stringify(\{\
    form: res,\
    submission: pdfSubmission\
  \});\
      // getting file\
   fetch(downloadUrl, \{\
    method: 'POST',\
    body: requestJson,\
    headers: \{\
      'Content-Type': 'application/json',\
      'x-file-token': fileToken\
    \}\
  \})\
    .then(function(res) \{\
        // creating blob\
      return res.blob();\
    \})\
    .then(function(blob) \{\
        // creating file\
    var reader = new FileReader();\
  \
      reader.onload = function() \{\
          //creating link\
      var downloadLink = document.createElement('a');\
      downloadLink.href = reader.result;\
      downloadLink.download = pdfFileName + '.pdf';\
      //simulating click to download\
      downloadLink.click();\
        instance.label = instance.originalComponent.label;\
        instance.redraw();\
      \};\
  \
      reader.readAsDataURL(blob);\
    \})\
    .catch(function(err) \{\
        //  errors\
      alert('Error while generating PDF');\
      instance.label = instance.originalComponent.label;\
      instance.redraw();\
    \});\
\});}