= render "log_events/filter_form",
  event_type_options: billing_log_events_options,
  exclude_query_field: true

= will_paginate(@billing_log_events)

%table.table.table-striped.table-hover.billing-logs
  %thead
    %tr
      %th= LogEvent.human_attribute_name(:event_time)
      %th= LogEvent.human_attribute_name(:event)
      %th.billing-logs__object= LogEvent.human_attribute_name(:object)
      %th= text("payment_source")
      %th= LogEvent.human_attribute_name(:notification)

  %tbody
    - decorated_log_events(@billing_log_events).each do |log_event|
      %tr
        %td= I18n.l(log_event.event_time, format: :usa)
        %td= text(log_event.locale_tag)
        %td.billing-logs__object
          = object_tag(log_event.object, class: "billing-logs__object")
          - if log_event.event_type == "review_orders_email" && log_event.has_orders?
            %br
            = render "billing_log_events/collapsible_list",
              items: log_event.order_ids,
              visible_count: 5,
              id_prefix: "log-event-orders",
              unique_id: log_event.id
          - if log_event.has_reconciliation_data?
            %br
            = render "billing_log_events/collapsible_notes",
              notes: log_event.all_reconciliation_notes,
              id_prefix: "log-event-notes",
              unique_id: log_event.id
        %td= object_tag(log_event.payment_source || "–", class: "billing-logs__payment-source")
        %td.billing-logs__email-notification
          - if log_event.email_notification?
            %span= log_event.email_subject
            %small= log_event.email_to
          - else
            –

= will_paginate(@billing_log_events)
