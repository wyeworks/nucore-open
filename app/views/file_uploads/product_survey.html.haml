-# TODO: I18n
= content_for :h1 do
  = current_facility

= content_for :sidebar do
  = render "admin/shared/sidenav_product",
    sidenav_tab: @product.class.name.pluralize.downcase

= content_for :tabnav do
  = render "admin/shared/tabnav_product", secondary_tab: "surveys"

%h2= @product

%p= t(".intro")
.box_no_fill.margin_bottom
  %h3= t(".order_form.head")
  %p= text("file_uploads.product_survey.order_form.main")

  = simple_form_for(@survey, url: create_product_survey_path(current_facility, @product.parameterize, @product), html: { multipart: true }) do |f|
    = f.error_messages
    = f.input :location, label: "Service URL", required: true, input_html: { size: 60 }

    = f.submit "Add", data: { disable_with: "Adding..." }, class: "btn"

  %br

  - surveys = @product.external_service_passers

  - if surveys.empty?
    %p.notice= t(".order_form.notice")

  - else
    %table.table.table-striped.table-hover
      %thead
        %tr
          %th
          %th.centered Status
          %th Service URL
          %th Date Added

      %tbody
        - surveys.each do |esp|
          %tr
            - if esp.active?
              %td.centered
                = link_to "Deactivate",
                  deactivate_survey_path(current_facility, @product, esp),
                  method: :put

              %td.centered Active

            - else
              %td.centered
                = link_to "Activate",
                  activate_survey_path(current_facility, @product, esp),
                  method: :put

              %td.centered Inactive

            %td
              = link_to truncate(esp.external_service.location, length: 60),
                esp.external_service.location,
                target: "_blank"

            %td= human_datetime(esp.created_at)

.box_no_fill
  %h3= t(".download_form.head")
  %p= t(".download_form.main")

  = form_for(@file, url: create_product_survey_path(current_facility, @product.parameterize, @product), html: { multipart: true, method: :post }) do |f|
    = f.error_messages
    = f.hidden_field :file_type

    = f.label :file, "File", class: "required"
    = f.file_field :file

    %ul.inline
      %li= f.submit text("shared.upload"), data: { disable_with: "Uploading..." }, class: "btn"

  %br

  - files = @product.stored_files.template

  - if files.empty?
    %p.notice= t(".download_form.notice")

  - else
    %table.table.table-striped.table-hover
      %thead
        %tr
          %th
          %th File
          %th Date Uploaded
          %th Uploaded By

      %tbody
        - files.each do |stored_file|
          %tr
            %td
              = link_to text("shared.delete"),
                [current_facility, @product, :remove_product_file, id: stored_file],
                method: :delete,
                data: { confirm: t(".download_form.confirm") }

            %td= link_to stored_file.name, product_file_path(stored_file)
            %td= human_datetime(stored_file.created_at)
            %td= User.find(stored_file.created_by).full_name
