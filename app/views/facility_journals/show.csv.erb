<%
output = CSV.generate do |csv|
  headers =  [Facility.model_name.human,
              Order.model_name.human,
              Order.human_attribute_name(:ordered_at),
              OrderDetail.human_attribute_name(:fulfilled_at)]
  headers <<  User.human_attribute_name(:uid) if @show_uid
  headers += [OrderDetail.human_attribute_name(:created_by_user),
              User.human_attribute_name(:first_name),
              User.human_attribute_name(:last_name),
              User.human_attribute_name(:email),
              "#{Product.model_name.human} #{Product.human_attribute_name(:url_name)}",
              "#{Product.model_name.human} #{Product.human_attribute_name(:type)}",
              "#{Product.model_name.human} #{Product.human_attribute_name(:name)}",
              OrderDetail.human_attribute_name(:quantity)]
  headers << "#{Account.model_name.human} #{Account.human_attribute_name(:type)}" if Account.config.multiple_account_types?
  headers << Account.human_attribute_name(:affiliate) if Account.config.affiliates_enabled?

  headers += ["#{Account.model_name.human} #{Account.human_attribute_name(:account_number)}",
              "#{Account.model_name.human} #{Account.human_attribute_name(:description)}",
              "#{Account.model_name.human} #{Account.human_attribute_name(:expires_at)}",

              "#{Account.model_name.human} #{Account.human_attribute_name(:owner)}",
              "#{Account.human_attribute_name(:owner)} #{User.human_attribute_name(:first_name)}",
              "#{Account.human_attribute_name(:owner)} #{User.human_attribute_name(:last_name)}",
              "#{Account.human_attribute_name(:owner)} #{User.human_attribute_name(:email)}",

              PriceGroup.model_name.human,
              OrderDetail.human_attribute_name(:actual_cost),
              OrderDetail.human_attribute_name(:actual_subsidy),
              OrderDetail.human_attribute_name(:actual_total)
            ]
  headers += [OrderDetail.human_attribute_name(:reviewed_at),
              OrderDetail.human_attribute_name(:dispute_at),
              OrderDetail.human_attribute_name(:dispute_reason),
              OrderDetail.human_attribute_name(:dispute_resolved_at),
              OrderDetail.human_attribute_name(:dispute_resolved_reason)] if SettingsHelper::has_review_period?
  csv << headers

  @journal.journal_rows.each do |journal_row|
    next unless journal_row.order_detail

    od = journal_row.order_detail
    order=od.order
    buyer=order.user
    account=od.account
    owner=account.owner_user
    product=od.product
    #bundle_desc=product.is_a?(Bundle) ? product.products.collect(&:name).join(' & ') : nil

    row = [od.facility,
           od.to_s,
           format_usa_datetime(od.ordered_at),
           format_usa_datetime(od.fulfilled_at)]

           # Who placed the order
    row << buyer.uid if @show_uid

    row +=[buyer.username,
           buyer.first_name,
           buyer.last_name,
           buyer.email,

           # What was ordered
           product.url_name,
           product.type.underscore.humanize,
           product.name,
           od.quantity]

           # account information
    row << account.type.underscore.humanize if Account.config.multiple_account_types?
    row << account.affiliate.try(:name) if Account.config.affiliates_enabled?

    row +=[account.account_number,
           account.description_to_s,
           format_usa_datetime(account.expires_at),

           # account owner information
           owner.username,
           owner.first_name,
           owner.last_name,
           owner.email,

           # pricing info
           od.price_policy.try(:price_group).try(:name),
           show_actual_cost(od),
           show_actual_subsidy(od),
           show_actual_total(od)
          ]

    # review and dispute info
    if SettingsHelper::has_review_period?
      row += [format_usa_datetime(od.reviewed_at),
              format_usa_datetime(od.dispute_at),
              od.dispute_reason,
              format_usa_datetime(od.dispute_resolved_at),
              od.dispute_resolved_reason]
    end

    csv << row
  end
end
%>
<%= raw output %>
