= simple_form_for order, html: { novalidate: false }, url: { action: :update_or_purchase } do |f|
  %table.table.table-striped.table-hover.js--cart.js--responsive_table#cart{ class: order.has_valid_payment? ? "" : " invalid" }
    %thead
      %tr
        %th &nbsp;
        %th= OrderDetail.human_attribute_name(:product)
        %th.centered= OrderDetail.human_attribute_name(:quantity)
        %th.currency= OrderDetail.human_attribute_name(:estimated_cost)
        - if @order.has_subsidies?
          %th.currency= OrderDetail.human_attribute_name(:estimated_subsidy)
        %th.currency= OrderDetail.human_attribute_name(:estimated_total)

    %tbody
      - order.grouped_order_details.each do |order_details|
        = render partial: "cart_row", collection: order_details, as: :order_detail, locals: { order_details: order_details, f: f }

    %tfoot.cart
      %tr
        %td.currency{ colspan: "3" }
          %b= t(".td.total")
        %td.currency
          .responsive-header= OrderDetail.human_attribute_name(:estimated_cost)
          %b= number_to_currency order.estimated_cost
        - if order.has_subsidies?
          %td.currency
            .responsive-header= OrderDetail.human_attribute_name(:estimated_subsidy)
            %b= number_to_currency order.estimated_subsidy
        %td.currency
          .responsive-header= OrderDetail.human_attribute_name(:estimated_total)
          %b= number_to_currency order.estimated_total

  %p.footnote= html("orders.form.foot.all")

  - if order.order_details.any? { |od| od.product.is_a?(Instrument) }
    %p.footnote= t(".foot.instrument")

  - if order.order_details.size > 0

    - if acting_as?
      = render_view_hook "acting_as", f: f, order_detail: order.order_details.first
      .backdate_fields= render "edit_date", f: f

    %ul.inline{ style: "float: left" }
      - if @order.has_valid_payment?
        %li
          = f.submit t("shared.update"),
            class: "btn"
        - if order.validated?
          %li
            = f.submit t("shared.purchase"),
              class: %w(btn btn-primary),
              data: { disable_with: t("shared.purchase") }
      - else
        - alert_error = t("models.order.account_invalid_for_orderer_tooltip")
        %li
          %a{ class: "btn disabled", data: { toggle: "tooltip" }, title: alert_error }
            = t("shared.update")
        - if order.validated?
          %li
            %a{ class: "btn btn-primary disabled", data: { toggle: "tooltip" }, title: alert_error }
              = t("shared.purchase")
