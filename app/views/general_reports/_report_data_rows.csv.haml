- @report_data.each do |od|
    :ruby
        row=nil

        begin
            order=od.order
            ordered_by=order.created_by_user
            purchaser=order.user
            account=od.account
            owner=account.owner_user
            product=od.product
            bundle_desc=product.is_a?(Bundle) ? product.products.collect(&:name).join(' & ') : nil
            reservation = od.reservation

            row=[
                # basic info
                od.facility, od.to_s, human_datetime(order.ordered_at), human_datetime(od.fulfilled_at), od.order_status.name, od.state,

                # who placed the order
                ordered_by.username, ordered_by.first_name, ordered_by.last_name, ordered_by.email,

                purchaser.username, purchaser.first_name, purchaser.last_name, purchaser.email,

                # what was ordered
                product.url_name, product.type.underscore.humanize, product.name, od.quantity, bundle_desc,

                # what account this order detail is for
                account.type.underscore.humanize, account.affiliate.try(:name), account.account_number, account.description, human_datetime(account.expires_at),
                owner.username, owner.first_name, owner.last_name, owner.email,

                # pricing info
                od.price_policy.try(:price_group).try(:name), show_estimated_cost(od), show_estimated_subsidy(od), show_estimated_total(od),
                show_actual_cost(od), show_actual_subsidy(od), show_actual_total(od)
            ]

            if reservation
                # reservation info
                row += [human_datetime(reservation.reserve_start_at), human_datetime(reservation.reserve_end_at),
                time_difference(reservation.reserve_end_at, reservation.reserve_start_at),
                human_datetime(reservation.actual_start_at), human_datetime(reservation.actual_end_at),
                time_difference(reservation.actual_end_at, reservation.actual_start_at)]
            else
                # leave blanks for non-reservations
                row += [nil, nil, nil, nil, nil, nil]
            end

            row += [od.note]

            # dispute info
            row += [ human_datetime(od.dispute_at), od.dispute_reason, human_datetime(od.dispute_resolved_at), od.dispute_resolved_reason ]
            row += [ human_datetime(od.reviewed_at) ]

            statement=od.statement
            row += [ statement ? human_datetime(statement.created_at) : nil ]

            journal=od.journal
            row += journal ? [ human_datetime(journal.journal_date), od.reconciled_note ] : [nil, nil]

        rescue => e
            row=[ "*** ERROR WHEN REPORTING ON ORDER DETAIL #{od.to_s}: #{e.message} ***" ]
        end

        csv << row
