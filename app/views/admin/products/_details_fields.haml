= f.input :name, hint: text(".hints.name", field: f.object.class.name.downcase)

= f.input :url_name, hint: product_url_hint(f.object), as: :string

- if SettingsHelper.feature_on? :product_specific_contacts
  = f.input :contact_email, hint: text(".hints.contact_email", facility_email: current_facility.email)

= f.text_area :description, class: "editor", hint: text(".hints.description")

- unless f.object.is_a?(Bundle)
  - if SettingsHelper.feature_on? :recharge_accounts
    = f.input :facility_account_id, collection: current_facility.facility_accounts.active.collect {|fa| [ fa, fa.id ] }, hint: text(".hints.deposit_account"), include_blank: false, label: FacilityAccount.model_name.human
    -# TODO
    %p= link_to text(".deposit_account.add"), :facility_facility_accounts
  - if SettingsHelper.feature_on? :expense_accounts
    = f.input :account, hint: text(".hints.account")
  = f.input :initial_order_status_id, collection: OrderStatus.initial_statuses(current_facility).collect {|cf| [cf.name_with_level, cf.id] }, hint: text(".hints.initial_order_status"), include_blank: false
  = f.input :requires_approval, as: :boolean, label: false, inline_label: text(".hints.requires_approval")
  - if SettingsHelper.feature_on?(:training_requests)
    = f.input :training_request_contacts, as: :string, hint: text(".hints.training_request_contacts")

= f.input :is_archived, as: :boolean, label: false, inline_label: text(".hints.is_archived")
= f.input :is_hidden, as: :boolean, label: false, inline_label: text(".hints.is_hidden", field: f.object.class.name.downcase)
