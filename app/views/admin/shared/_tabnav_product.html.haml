- return nil if @product.nil? || @product.id.nil?
%ul.nav.nav-tabs
  = tab t("views.admin.products.tabnav.details"), [:manage, current_facility, @product], (secondary_tab == "details")
  - if @product.is_a?(Instrument)
    = tab t("views.admin.products.tabnav.relays"), [current_facility, @product, Relay], (secondary_tab == "relays")
  - if @product.requires_approval? && @product.respond_to?(:product_access_groups)
    = tab ProductAccessGroup.model_name.human.pluralize, facility_instrument_product_access_groups_path(current_facility, @product), (secondary_tab == "restriction_levels")
  - if @product.respond_to?(:schedule_rules)
    = tab t("views.admin.products.tabnav.schedule_rules"), [current_facility, @product, ScheduleRule], (secondary_tab == "schedule_rules")
  - if @product.requires_approval?
    = tab t("views.admin.products.tabnav.users"), [current_facility, @product, :users], (secondary_tab == "users")
  - if @product.is_a?(Bundle)
    = tab t("views.admin.products.tabnav.products"), facility_bundle_bundle_products_path(current_facility, @product), (secondary_tab == "products")
  - else
    - if can? :index, PricePolicy
      = tab t("views.admin.products.tabnav.pricing_rules"), [current_facility, @product, PricePolicy], (secondary_tab == "pricing_rules")
  - if @product.is_a?(Instrument)
    = tab t("views.admin.products.tabnav.restrictions"), edit_facility_price_group_product_path(current_facility, @product), (secondary_tab == "restrictions")
    - if @product.duration_pricing_mode?
      = tab t("views.admin.products.tabnav.duration_pricing"), edit_facility_instrument_duration_rate_path(current_facility, @product), (secondary_tab == "duration_pricing")
    = tab t("views.admin.products.tabnav.reservations"), facility_instrument_schedule_path(current_facility, @product), (secondary_tab == "reservations")
  = tab t("views.admin.products.tabnav.documentation"),
    [current_facility, @product, :file_uploads, file_type: "info"],
    (secondary_tab == "documentation")
  - if @product.respond_to?(:reservations)
    = tab t("views.admin.products.tabnav.accessories"), facility_product_product_accessories_path(current_facility, @product), (secondary_tab == "accessories")
  - if @product.is_a?(Service)
    = tab t("views.admin.products.tabnav.surveys"), product_survey_path(current_facility, @product.parameterize, @product.url_name), (secondary_tab == "surveys")
  = tab t("views.admin.products.tabnav.notifications"), facility_product_notifications_path(current_facility, @product), (secondary_tab == "notifications")
  - unless @product.is_a?(Bundle)
    - if ResearchSafetyCertificate.any?
      = tab ProductResearchSafetyCertificationRequirement.model_name.human.pluralize, facility_product_product_research_safety_certification_requirements_path(current_facility, @product), secondary_tab == "certification_reqs"

  = render_view_hook "additional_tabs", secondary_tab: secondary_tab
