= content_for :head_content do
  = javascript_include_tag "price_policy"

- price_policy = @price_policies.first
= render "price_policies/common_fields", f: f, price_policy: price_policy

- if local_assigns[:charge_for_collection]
  = f.input :charge_for,
    collection: charge_for_collection,
    selected: price_policy.charge_for

%div{ style: "display: flex; flex-direction: row-reverse" }
  %h4.half-width= t(".title")
%table.table.table-striped.table-hover.price-policy-table
  %thead
    %tr
      %th{ rowspan: "2" }= PriceGroup.model_name.human
      %th{ rowspan: "2" }= price_policy.class.human_attribute_name(:type)
      %th{ rowspan: "2" }= price_policy.class.human_attribute_name(:can_purchase)
      - if local_assigns[:minimum_cost]
        %th= price_policy.class.human_attribute_name(:minimum_cost)
      - if local_assigns[:cancellation]
        %th= price_policy.class.human_attribute_name(:cancellation_cost)
      %th{ scope: "col" }= t(".initial_rate")
      %th{ scope: "col" }= t(".step_1")
      %th{ scope: "col" }= t(".step_2")
      %th{ scope: "col" }= t(".step_3")
  %tbody
    %tr
      %td
      %td
      %td
      - if local_assigns[:minimum_cost]
        %td
      - if local_assigns[:cancellation]
        %td
      %th{ scope: "col" }
        = label :default_min_duration, t(".rate_start"), class: "normal-weight"
        = number_field :default_min_duration, "default", value: 0, readonly: true, disabled:true, class: "half-width"
      - @min_durations.each_with_index do |min_duration, column_index|
        %th{ scope: "col" }
          .control-group
            = label :min_duration, t(".rate_start"), class: "normal-weight"
            = number_field :min_duration, column_index, min: 1, value: min_duration, class: "half-width js--minDuration", data: { index: column_index }
    - @price_policies.each_with_index do |price_policy, index|
      - price_group = price_policy.price_group
      = fields_for "price_policy_#{price_group.id}", price_policy do |pp|
        - row_class = []
        - row_class << "js--masterInternalRow" if price_group.master_internal?
        - row_class << "js--adjustmentRow" unless price_group.external? || price_group.master_internal?
        %tr{class: row_class}
          %th{ scope: "row" }= price_group.name
          %td= price_group.type_string
          %td= pp.check_box :can_purchase, class: "js--canPurchase"
          - if price_group.external? || price_group.master_internal?
            = render "time_based_price_policies/stepped_billing_amount_row", price_group: price_group, price_policy: price_policy, pp: pp, cancellation: cancellation, minimum_cost: minimum_cost
          - else
            = render "time_based_price_policies/stepped_billing_adjustment_row", price_group: price_group, price_policy: price_policy, pp: pp, cancellation: cancellation, minimum_cost: minimum_cost
          - duration_rates = pp.object.duration_rates.sort_by { |d| d.min_duration_hours || 1_000 }
          = pp.fields_for :duration_rates, duration_rates do |dr|
            - if price_group.external? || price_group.master_internal?
              - rate_input_class = price_group.master_internal? ? "js--baseRate" : ""
              %td
                = dr.label :rate, t(".rate_per_hr"), class: "normal-weight"
                = dr.text_field :rate,
                  value: number_to_currency(dr.object.hourly_rate, unit: "", delimiter: ""),
                  size: 8,
                  class: rate_input_class,
                  data: { index: duration_rates.find_index(dr.object) }
                = dr.hidden_field :min_duration_hours
            - else
              %td
                = dr.label :subsidy, t(".adjustment"), class: "normal-weight"
                %span="-"
                = dr.text_field :subsidy, value: number_to_currency(dr.object.hourly_subsidy, unit: "", delimiter: ""), size: 8
                = dr.hidden_field :min_duration_hours
                = dr.hidden_field :rate, class: "js--hiddenRate"
