%div{ style: "display: flex; flex-direction: row-reverse" }
  %h4.half-width= "Stepped Billing Rates"
%table.table
  %thead
    %tr
      %th.actions{ rowspan: 2 }
      %th{ rowspan: 2 }= "#{PriceGroup.model_name.human} (#{PricePolicy.human_attribute_name(:type)})"
      - if local_assigns[:minimum_cost]
        %th.currency{ rowspan: 2 }= PricePolicy.human_attribute_name(:minimum_cost)
      - if local_assigns[:cancellation]
        %th.currency{ rowspan: 2 }= PricePolicy.human_attribute_name(:cancellation_cost)
      %th.currency= "Initial Rate"
      %th.currency= "Step 2"
      %th.currency= "Step 3"
      %th.currency= "Step 4"
  %tbody
    %tr
      %td
      %td
      - if local_assigns[:minimum_cost]
        %td
      - if local_assigns[:cancellation]
        %td
      %td{ style: "text-align: center" }= 0
      - @min_durations.each do |min_duration|
        %td{ style: "padding: 7px" }
          = "Rate Start (hr):"
          - if min_duration.present?
            = min_duration
    - price_policies_to_show = price_policies.select(&:can_purchase?)
    - price_policies_to_show.each do |price_policy|
      %tr
        - price_group = price_policy.price_group
        - if price_policies_to_show.first == price_policy
          %td.centered{ rowspan: price_policies_to_show.length }
            - if price_policies.all?(&:editable?) && can?(:edit, PricePolicy) && !@product.skip_order_review?
              %p
                = link_to t("shared.edit"),
                  [:edit, current_facility, product, :price_policy, id: url_date]
              %p
                = link_to t("shared.remove"),
                  [current_facility, product, :price_policy, id: url_date],
                  data: { confirm: t("shared.confirm_message") },
                  method: :delete
            - else
              %p.muted= t("shared.edit")
              %p.muted= t("shared.remove")

        %td= "#{price_group.name} (#{price_group.type_string})"

        - if price_policy.valid?
          - if local_assigns[:minimum_cost]
            %td.currency
              .rate= number_to_currency price_policy.minimum_cost
              - if price_policy.has_minimum_cost? && price_policy.has_subsidy?
                .subsidy= "- #{number_to_currency price_policy.minimum_cost_subsidy}"
                %strong= "= #{number_to_currency price_policy.subsidized_minimum_cost}"

          - if local_assigns[:cancellation]
            %td.currency
              - if price_policy.charge_full_price_on_cancellation?
                = price_policy.class.human_attribute_name(:full_price_cancellation)
              - else
                = number_to_currency(price_policy.cancellation_cost)
          %td.currency
            - if price_policy.has_rate?
              .rate= number_to_currency price_policy.hourly_usage_rate
              - if price_policy.has_subsidy?
                .subsidy= "- #{number_to_currency price_policy.hourly_usage_subsidy}"
                %strong= "= #{number_to_currency price_policy.subsidized_hourly_usage_cost}"

              %p.per-minute-show
                - price_per_minute = (price_policy.subsidized_hourly_usage_cost / 60)
                = number_to_currency price_per_minute, precision: 4
                \/ minute
          - price_policy.duration_rates.sorted.each do |duration_rate|
            %td.currency
              - if duration_rate.rate.present?
                .rate= number_to_currency duration_rate.rate
              - if duration_rate.subsidy.present?
                .subsidy= "- #{number_to_currency duration_rate.subsidy}"
          - (PricePolicy::MAX_RATE_STARTS - price_policy.duration_rates.length).times do
            %td.currency

        - else
          %td.centered{ colspan: 5 }
            = t("price_policies.problem")
            = price_policy.errors.full_messages.to_sentence
