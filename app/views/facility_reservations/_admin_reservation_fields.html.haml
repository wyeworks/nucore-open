.row
  .col-md-12
    .form-group
      = f.input :category do
        = f.select :category, options_for_select(admin_category_collection, f.object.category), { include_blank: "Select a Category" }, { class: "form-control" }

.js--timeFieldAdjustor
  .row
    .col-md-12
      = label_tag :admin_reservation_reserve_start_date, "Reserve start date", class: "string optional control-label"
      .datetime-block
        .form-group
          = f.text_field :reserve_start_date, class: "form-control datepicker__data"
        .form-group
          = time_select f, :reserve_start
        .form-group{style: "margin-top: -25px;"}
          = f.label :duration_mins, "Duration mins", class: "string optional control-label", style: "display: block; margin-bottom: 5px;"
          = f.text_field :duration_mins, class: "form-control timeinput"
  
  .row
    .col-md-12
      = label_tag :admin_reservation_reserve_end_date, "Reserve end date", class: "string optional control-label"
      .datetime-block
        .form-group
          = f.text_field :reserve_end_date, class: "form-control datepicker__data"
        .form-group
          = time_select f, :reserve_end, minute_step: 1

.clearfix

.row
  .col-md-12
    = f.input :admin_note unless @order_detail
.row
  .col-md-12
    = f.input :user_note unless @order_detail

.row
  .col-md-12
    .checkboxControl
      = f.input :expires?, as: :boolean, label: t('activemodel.attributes.admin_reservation_form.expires?'), input_html: { data: { disables: ".admin_reservation_expires_mins_before" } }, wrapper_html: { class: "checkboxControl__checkbox" }
      = f.input :expires_mins_before, label: t('activemodel.attributes.admin_reservation_form.expires_mins_before'), input_html: { class: "timeinput" }

.clearfix

:coffeescript
  $ ->
    new ReservationTimeFieldAdjustor(
      $(".js--timeFieldAdjustor"),
      "start": [
        "admin_reservation[reserve_start_date]",
        "admin_reservation[reserve_start_hour]",
        "admin_reservation[reserve_start_min]",
        "admin_reservation[reserve_start_meridian]"
      ]
      "end": [
        "admin_reservation[reserve_end_date]",
        "admin_reservation[reserve_end_hour]",
        "admin_reservation[reserve_end_min]",
        "admin_reservation[reserve_end_meridian]"
      ]
      "duration": "admin_reservation[duration_mins]"
    )
