- if @statements.empty?
  %p.notice= t(".no_statements")
- else
  %table.table.table-striped.table-hover
    %thead
      %tr
        %th= Statement.human_attribute_name(:invoice_number)
        %th= Statement.human_attribute_name(:created_at)
        %th= Statement.human_attribute_name(:sent_to)
        - if local_assigns[:admin_view]
          %th= Account.model_name.human
        - else
          %th= Facility.model_name.human
          %th= OrderDetail.human_attribute_name("description")
        %th.currency # of #{Order.model_name.human.pluralize}
        %th.currency= Statement.human_attribute_name(:total_cost)
        %th= Statement.human_attribute_name(:status)
        %th= Statement.model_name.human
    %tbody
      - @statements.each do |s|
        %tr
          %td.centered
            = "##{s.invoice_number}"
            %br
            = link_to t("statements.pdf.download"), statement_path(s)
          %td= human_datetime(s.created_at)
          %td= s.account.notify_users.map(&:full_name).join(', ')
          - if local_assigns[:admin_view]
            %td= link_to s.account, facility_account_path(current_facility, s.account)
          - else
            %td= s.facility.name
            %td.user-order-detail
              - order_detail = s.order_details.first
              .order-detail-description
                = order_detail_description(order_detail)
                - order_detail.extend PriceDisplayment
                = "(#{order_detail.wrapped_quantity})".html_safe unless order_detail.problem?
                - if order_detail.reservation
                  %br
                  %em= order_detail.reservation
              - if order_detail.note.present?
                .order-detail-extra.order-detail-note= "Note: #{order_detail.note}"
          %td.currency=h s.order_details.count
          %td.currency= number_to_currency(s.total_cost)
          %td= t("statements.reconciled.#{s.reconciled?}")
          %td
            = link_to "Download", account_statement_path(s.account, s, format: :pdf)
  = will_paginate(@statements)
