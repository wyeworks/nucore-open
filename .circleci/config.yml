version: 2

jobs:
  build:
    parallelism: 4
    docker:
      - image: circleci/ruby:2.6.6-node-browsers-legacy
        environment:
          - RAILS_ENV: "test"
          - MYSQL_USER: root
          - SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
      - image: circleci/mysql:5.7.22-ram
        environment:
          MYSQL_ROOT_PASSWORD: 'root'
          MYSQL_ROOT_HOST: "%"
      - image: selenium/standalone-chrome:latest

    steps:
      - checkout

      # Bundle
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}--{{ .Branch }}-{{ checksum "Gemfile.lock" }}-{{ checksum ".ruby-version" }}

      - run: bundle install --path vendor/bundle

      - save_cache:
          key: gem-cache-{{ arch }}--{{ .Branch }}-{{ checksum "Gemfile.lock" }}-{{ checksum ".ruby-version" }}
          paths:
            - vendor/bundle

      - run: cp config/database.yml.mysql.template config/database.yml
      - run: cp config/secrets.yml.template config/secrets.yml

      # Database setup
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          shell: /bin/bash -eo pipefail -O globstar
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format documentation \
                              $(circleci tests glob \
                              "spec/**/*_spec.rb" \
                              "vendor/engines/**/spec/**/*_spec.rb" \
                              | circleci tests split --split-by=timings)

      - run:
          command: |
            if [ "${CIRCLE_NODE_INDEX}" == "0" ]; then
              bundle exec teaspoon \
                --suppress-log \
                --format junit > /tmp/test-results/teaspoon.xml
            fi

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results

      - deploy:
          name: Stage deploy of master branch
          command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                bundle exec cap staging deploy
              fi

workflows:
  version: 2
  build:
    jobs:
      - build
